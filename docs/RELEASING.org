#+TITLE: RELEASING


* Docker Hub tasks  

This should happen continuously as part of the development cycle.

- Push the container image to [[https://hub.docker.com/r/uycyjnzgntrn/entrusted_container][Docker Hub]] per [[../app/entrusted_container/README.org][publishing instructions]]
- Apply the =latest= tag to the new image version
  
* Preparation tasks

- Review and update the =README= page for impacted components (/if needed/)
- Bump the version of the application at several places for now (SAME version number EVERYWHERE)... 
  - Bump the =version= field in ALL the projects (=Cargo.toml= files)
    - Please try to follow closely [[https://semver.org/][semantic versioning]]
  - Bump the =version= field in the =entrusted_container/Dockerfile= for the label =org.opencontainers.image.version=
  - Bump the version in the HTML title for =entrusted_webserver/web-assets/index.html=
- Update Debian package changelog entries in =ci_cd/linux/doc/changelog=
- In revision control, push the changes to =develop= and merge =develop= into =main=
  
* Build tasks

Builds are now performed with GitHub Actions ahead of releases.

If you still want to build all artifacts locally:
- On a recent Ubuntu Linux installation (Virtual Machine preferred), build all the release artifacts =ci_cd/build.sh=
- This generates release artifacts under a new folder called =packages=

* Testing tasks

Ahead of releases, create a new issue on GitHub with the contents of [[./TESTING.md][TESTING.md]].

* Publish releases

** Revision control tasks

- Tag the main branch with the new =release version= (i.e. =1.1.1=) and push the tag  

** GitHub Web interface tasks  

- Draft a new releases associated with the newly created =git= tag
- Write the release notes based on entries in =CHANGELOG.org=
- Upload all release artifacts (=exe=, =dmg=, =zip=, =tar=, =deb=, =rpm= and =iso= files)
- Publish the release
