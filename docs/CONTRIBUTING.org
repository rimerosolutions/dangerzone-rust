#+TITLE: CONTRIBUTING

  There are plenty of ways to help. Please note that the best way to contribute is via pull requests.

* Bug reports and comments

All the bugs reports, questions or suggestions are welcome and appreciated:
- Please note that the best way to contribute is via pull requests
- This is more of a hobby project than anything else at this time

* Documentation

Clear and concise communication is always a goal. 

* Research & Development

There are always multiple areas to explore (CI/CD, security, sandboxing approaches, new features development, etc.).
  
* Coding

There are several opportunities to refactor the code. The application was written in Rust mostly for resources efficient purposes.
  
* User interfaces and artwork

The logos and images have been created with Gimp and similar tools (minimal time investment).

The goal is to keep user interfaces very lightweight (fast, responsive, resources efficient), which requires more work
- [[https://github.com/fltk-rs/fltk-rs][FLTK]] is the Desktop graphical toolkit for this application, it's a small and fast library that is easy to use
- The Web user interface is built with plain HTML and JavaScript at this time

* Testing

There will always be software bugs and annoyances, but "we try our best" (time, required effort & skills compromise):
- Manual testing is performed prior each release at this time
- It's time consuming to test all the programs and features, for all supported Operating systems and environments

* Translations

[[https://www.gnu.org/software/gettext/][GNU Gettext]] is currently leveraged for translations, because it's reasonably good.

- Translations are only available in English and French so far
- Each application component has a =translations= folder with translation files (=messages.po=)
