#+TITLE: TODO

* Milestone: Hardening and features maturity [20%]
- [ ] URGENT-potentially revert settings for image size, etc. seems much slower to run...
- [-] Security
  - [-] Virtual machine hardening for Live CD
    - Security profiles for the container image execution
      - [ ] [[https://docs.docker.com/engine/security/apparmor/][apparmor]] security profile
      - [ ] [[https://docs.docker.com/engine/security/seccomp/][seccomp]] security profile
    - [ ] [[https://docs.arbitrary.ch/security/systemd.html][Systemd sandboxing]] for the "Online Service (=entrusted-webserver=)
    - [X] [[https://madaidans-insecurities.github.io/guides/linux-hardening.html][sysctl]] settings and kernel boot parameters, [[https://github.com/GrapheneOS/hardened_malloc][hardened_malloc]]
  - [X] Run an publish vulnerability assessments for container images
  - [X] Trim even more container image size
  - [X] Evaluate more frequently updated container images for CVEs
    - [X] Debian takes a while to sometimes address issues but it's very stable (PREFERRED)
    - [X] Alpine would require revisiting occasional segmentation faults (exit code =139=)
    - [X] Fedora takes a while to build (dnf is VERY slow) and trimming the image size is rather involved
- [ ] User interface
  - [ ] Ability to cancel non-started tasks
  - [ ] Evaluate opportunities to simplify the user interface
  - [ ] Additional settings
    - [ ] Paper size and image extract quality (maybe LOW, MEDIUM and HIGH?)
    - [ ] OCR target DPI
    - [ ] Add maybe some kind of profiles or presets? How complex would the UI be?
  - [ ] Smooth scrolling as files are being processed to highlight the current document
- [-] Improved conversions
  - [ ] Parallel conversions with both user settings and application-managed guardrails
  - [ ] Evaluate performance optimization opportunities
  - [X] Allow multiple language selection for searchable PDFs (OCR)
- [-] Code maintenance and other practices
  - [ ] Use identifiers instead of row indices to enable parallel conversions later (maybe initial "dumb implementation")    
  - [ ] Some level of testing? (scripts at least with exit code capture?)
  - [ ] Desktop interface code cleanup for clarity and simplicity?
  - [X] Streamline locale handling (=en-CA= detection vs. =en_CA= catalog translation)
  - [X] Sign revision control commits and container images
- [X] Builds and releases
  - [X] Revisit migration from local shell scripts to [[https://docs.github.com/en/actions][GitHub actions]] (rejected for lack of flexibility, cross-builds multi-arch annoyances)
  - [X] Ensure that all executables are stripped in the ci/cd pipeline (=strip= command)    
  - [X] Bump the cargo edition to =2021= instead of =2018= in cargo manifests

* Milestone: Usability and features stabilization [100%]

- [X] Improved conversions
  - [X] Address permission denied errors with Docker under Linux (volume permissions)
  - [X] Address occasional conversion failures due to container process crashes
  - [X] Custom output location for individual documents in the conversion queue
  - [X] Support for password-protected documents
  - [X] Better control over image quality and clearer understanding of output size expectations
- [X] User Interface
  - [X] Add overall progress information during conversions
  - [X] Hide command prompts while running processes on Windows, and address file permissions errors
  - [X] Responsiveness issues during conversions (UI thread and background operations)
  - [X] Display overall conversion results ("X out of Y files were not successfully converted")
  - [X] Prompt for confirmation prior closing the application during conversions (Desktop only)
  - [X] Manual check for release updates (Desktop and command-line clients)
- [X] Security
  - [X] Review container execution options (subject of recurring reviews)
  - [X] Review some of the code and read few security-related articles (subject of recurring reviews)
  - [X] Document periodic container vulnerability assessments (new =org-mode= file)
    - [X] Determine and document schedule
    - [X] Revisit currently used/preferred tool ([[https://trivy.dev/][Trivy]])
- [X] Code maintenance
  - [X] Migrate from [[https://actix.rs/][actix_web]] to [[https://github.com/tokio-rs/axum][axum]] for the =entrusted_webserver= component
  - [X] Eliminate shell commands inside the container image
  - [X] Investigate why Firefox now blocks programmatic button clicks for file uploads? (missing =xdg-portal*= packages for [[https://snapcraft.io/about][snap]])
- [X] CI/CD and packaging
  - [X] arm64 support for the Live CD ISO image
  - [X] Better reproducible build environment
  - [X] Adopt Git flow and delete all the previous spiral branches
  - [X] Create few specific Linux packages (DEB, RPM)
  - [X] Add README notes for [[https://github.com/axtloss/flatpaks][axtloss Flatpak packages]] and later in release notes
  - [X] Experimental support for [[https://en.wikipedia.org/wiki/AArch64][aarch64/arm64]] (excluding Windows and the Live CD)
  - [X] For now, stick to custom CI/CD pipeline instead of [[https://github.com/features/actions][GitHub actions]] or similar
- [X] Mime-type detection and file associations
  - [X] Register file associations with supported document types
  - [X] For now, roll custom mime-type detection system until there is something better available
- [X] Documentation and Marketing
  - [X] Move some documentation to [[https://github.com/rimerosolutions/entrusted/wiki][wiki pages]]
  - [X] Publish presentations
    - [X] [[https://github.com/rimerosolutions/entrusted/files/9892585/entrusted_document_sanitizer.pdf][PDF slides]]
    - [X] [[https://www.youtube.com/watch?v=InEsPLyFsKQ][Youtube presentation]]

* Milestone: Initial document sanitization tool [100%]

- [X] Replicate CLI functions of the original tool, not necessarily the exact behavior
- [X] "Misc." bulk fixes & changes
  - [X] Eliminate CLI calls inside the container, most of the job can likely be done with libraries
  - [X] Minimal Desktop user interface via the [[https://github.com/fltk-rs/fltk-rs][FLTK]] lightweight toolkit
  - [X] Temporarily drop support for Office documents (Open Document, MS Office), more research for [[https://github.com/rimerosolutions/rust-calls-java][Java native libraries integration]] (few runtime errors with [[https://www.oracle.com/java/graalvm/][GraalVM]])
- [X] UI and other improvements, including tech debt and other issues
- [X] Bring back Office document support via LibreOffice
  - [X] Add workarounds for mime-type detection library (Open Document, OOXML, Legacy office format)
  - [X] Update processing logic to use LibreOffice for initial PDF conversion, prior further processing
- [X] Documentation updates and compilation error fix
- [X] Usability improvements and slightly better MS Windows support
- [X] Online service with Web interface and remote CLI client
- [X] Look at releases for Linux, Mac OS and Windows
- [X] Documentation updates
- [X] Implement conversion progress information
- [X] Minimal CI/CD pipeline
- [X] Provide live CD
- [X] Initial support for batch conversions
  - [X] In the Web user interface
  - [X] In the graphical desktop interface
  - [X] Document a simple =find-exec= workflow for the command-line client
- [X] Fix few obvious issues and then release new batch conversion feature
  - [X] Do not ship an unsigned app bundle for Mac OS as it doesn't behave/work anyway
  - [X] Mitigate some of the new Desktop and Web UI bugs as much as possible
- [X] Additional release artifacts for convenience
  - [X] Add DMG image for Mac OS, with the ability to still invoke external programs
  - [X] Add software installer for Windows via [[https://nsis.sourceforge.io/Main_Page][NSIS]] for now
- [X] Support application preferences
- [X] Add infrastructure for message translations: English and French for now
- [X] Minor code cleanup, create artwork and rename the Github project
