#+TITLE: entrusted/app/entrusted-container

* What is this?

This module provides the document sanitization logic running inside a "sandbox" ([[https://www.docker.com/][Docker]] or [[https://podman.io/][Podman]] or [[https://github.com/lima-vm/lima][Lima]]).

- There's a small series of transformations leading to the generation of a trusted PDF document (optionally with full-text search support, if [[https://en.wikipedia.org/wiki/Optical_character_recognition][OCR]] was requested)
- There is no command-line invocation of external programs within the container

[[./images/architecture.png]]

* What is required?

This module is deployed as a container image (/Docker/ or /Podman/ or /Lima/), published on [[https://hub.docker.com/r/uycyjnzgntrn/entrusted_container][Docker Hub]].

* How to build this?

Because of a shared library, you /MUST/ build the container image from the =entrusted= root folder.

** Podman

#+begin_src sh
  APPVERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/[\"]/, "", $2); printf("%s",$2) }' Cargo.toml)
  podman build -t docker.io/uycyjnzgntrn/entrusted_container:${APPVERSION} . -f entrusted_container/Dockerfile
  podman image prune -f --filter label=stage=entrusted_container_builder
#+end_src

** Docker

#+begin_src sh
  APPVERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/[\"]/, "", $2); printf("%s",$2) }' Cargo.toml)
  docker build -t docker.io/uycyjnzgntrn/entrusted_container:${APPVERSION} . -f entrusted_container/Dockerfile
  docker image prune -f --filter label=stage=entrusted_container_builder
#+end_src

** Lima

#+begin_src sh
  APPVERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/[\"]/, "", $2); printf("%s",$2) }' Cargo.toml)
  lima nerdctl build -t docker.io/uycyjnzgntrn/entrusted_container:${APPVERSION} . -f entrusted_container/Dockerfile
  lima nerdctl prune -f --filter label=stage=entrusted_container_builder
#+end_src

* How to publish to Docker Hub?

The commands below apply to =podman=, the syntax is similar for =docker= or =lima=.
- For all the commands to follow, it is assumed that you're at the root of the =entrusted= project folder
- A multi-arch container image is published (=linux/amd64= and =linux/arm64= platforms)

#+begin_src sh
  ./ci_cd/create_container_image.sh

  APPVERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/[\"]/, "", $2); printf("%s",$2) }' Cargo.toml)

  podman login -u uycyjnzgntrn docker.io

  podman manifest push --all docker.io/uycyjnzgntrn/entrusted_container:${APPVERSION} docker.io/uycyjnzgntrn/entrusted_container:${APPVERSION}
  podman manifest push --all docker.io/uycyjnzgntrn/entrusted_container:latest docker.io/uycyjnzgntrn/entrusted_container:latest

  podman logout docker.io
#+end_src

* How to run this?

This application is leveraged by the =entrusted-client= program (shell commands to =podman= or =docker= or =lima=) , it's not really meant to be used "directly" (except for "informed & resourceful" individuals).
