#+TITLE: README

* What is this?

=dangerzone-rust= allows converting suspiciuous documents into safe and trusted PDFs, without worrying too much about viruses or evil macros. *This is not a mature project*.
- This repository is a [[https://www.rust-lang.org/][Rust]] port of [[https://dangerzone.rocks/][Dangerzone]], for experimentation purposes (not an exact port)
- Similarly to the original Dangerzone tool, documents or images are converted inside a "sandbox"

* Where can I get it?

For downloads, please visit the [[https://github.com/rimerosolutions/dangerzone-rust/releases][releases page]] (64 bit operating systems).
- For MacOS users, please download the file =dangerzone-darwin-amd64-<version>.zip=
- For Linux users, please download the file =dangerzone-linux-amd64-<version>.tar=
- For Windows users, please download the file =dangerzone-windows-amd64-<version>.zip=
    
* What is available?

** User interfaces

There are 3 user interfaces ([[./dangerzone-httpserver][Web]], [[./dangerzone-client][Desktop and CLI]]).

[[./images/screenshots.png]]

** Key components

Most users will open a document with the =dangerzone-client=, this will automatically install the =dangerzone-container= (on demand) and generate a PDF.

|-----------------------+---------------------------------------------|
| Component             | Purpose                                     |
|-----------------------+---------------------------------------------|
| [[./dangerzone_container][dangerzone_container]]  | Document processing "sanbox"                |
| [[./dangerzone_client][dangerzone_client]]     | Command-line and graphical user interfaces  |
| [[./dangerzone_httpserver][dangerzone_httpserver]] | Online service feature with a Web interface |
| [[./dangerzone_httpclient][dangerzone_httpclient]] | Command-line client for the online service  |
|-----------------------+---------------------------------------------|

** Architecture overview

Below is a high-level architecture overview, the solution relies on a container engine solution (i.e. [[https://www.docker.com/][Docker]]).

[[./images/image.png]]

* What is required?

- *Operating System*: Linux, MacOS or Windows
  - Mostly Linux has been tested
  - BSD users can probably use the "Online service" and its Web interface
- *Container Runtime*: [[https://podman.io/][Podman]], [[https://www.docker.com/][Docker]] or [[https://github.com/lima-vm/lima][Lima]]
  - On Linux, please install Podman
  - For Windows, Docker is recommended
  - For MacOS, /please/ use either Docker or Lima

* What is planned?

- [X] Replicate CLI functions of the original tool, not necessarily the exact behavior ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral01][spiral01 branch]])
- [X] "Misc." bulk fixes & changes ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral02][spiral02 branch]])
  - [X] Eliminate CLI calls inside the container, most of the job can likely be done with libraries
  - [X] Minimal Desktop user interface via the [[https://github.com/fltk-rs/fltk-rs][FLTK]] lightweight toolkit
  - [X] Temporarily drop support for Office documents (OpenDocument, MS Office), more research for [[https://github.com/rimerosolutions/rust-calls-java][Java native libraries integration]] (few runtime errors with [[https://www.oracle.com/java/graalvm/][GraalVM]])
- [X] UI and other improvements, including tech debt and other issues ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral03][spiral03 branch]])
- [X] Bring back Office document support via LibreOffice ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral04][spiral04 branch]])
  - [X] Add workarounds for mime-type detection library (OpenDocument, OOXML, Legacy office format)
  - [X] Update processing logic to use libreoffice for initial PDF conversion, prior further processing
- [X] Documentation updates and compilation error fix ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral05][spiral05 branch]])
- [X] Usability improvements and slightly better MS Windows support ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral06][spiral06 branch]])
- [X] Online service with Web interface and remote CLI client ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral07][spiral07 branch]])  
- [X] Look at releases for Linux, MacOS and Windows ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral08][spiral08 branch]])
- [X] Documentation updates ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral09][spiral09 branch]])  
- [X] Implement conversion progress information ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral10][spiral10 branch]])
- [X] Minimal CI/CD pipeline ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral11][spiral11 branch]])
- [ ] Support batch conversions
- [ ] Support translations
- [ ] Support application preferences (GUI and CLI support)
- [ ] Improve user interface and documentation
- [ ] Support Tails
- [ ] etc.
  
    
* What are the differences with Dangerzone?

This project is more of a hobby at this point: it lacks maturity and several features.

** The good

|------------------------------------------+-----------------------------------------------------------------|
| Topic                                    | Details                                                         |
|------------------------------------------+-----------------------------------------------------------------|
| *Likely faster processing*               | Programming language difference and "1-step" conversion process |
| *Online service*                         | HTTP server with a minimal lightweight Web interface            |
| *Docker alternative on MacOS*            | [[https://github.com/lima-vm/lima][Lima]] was tested, but a while back                               |
| *Less likelyhood of conversion timeouts* | There's only one external program involved                      |
|------------------------------------------+-----------------------------------------------------------------|
  
** The ugly

|------------------------------------------+-----------------------------------------------------------|
| Topic                                    | Details                                                   |
|------------------------------------------+-----------------------------------------------------------|
| *Likely less secure than the dangerzone* | 1 step conversion process, instead of 2 steps             |
| *This is mostly an experiment*           | Not heavily tested, even if I use =dangerzone-rust= daily |
| *Not the best code*                      | I barely /know/ Rust, in comparison to Java               |
| *Lacking support for batch conversions*  | This could have been implemented from day one, maybe      |
| *No support for translations yet*        | I have done a minimal POC for the approach                |
| *Incomplete*                             | UI, code polishing, probably several "obvious things"     |
|------------------------------------------+-----------------------------------------------------------|
  

* Contributing

All the bugs reports, questions or suggestions are welcome and appreciated. Please note that the best way to contribute is via pull requests.
