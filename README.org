#+TITLE: README

* What is this?

Dangerzone allows converting suspiciuous documents into safe and trusted PDFs, without worrying too much about viruses or evil macros.
- This repository is a [[https://www.rust-lang.org/][Rust]] port of [[https://dangerzone.rocks/][Dangerzone]] (not exact), for experimentation purposes
- Similarly to the original Dangerzone tool, documents or images are converted inside a "sandbox"

** Key differences with the original Dangerzone

*** The good
- *Likely faster processing*: Programming language difference and "1-step" conversion process
- *Less likelyhood of conversion timeouts or stuck processing*: LibreOffice is the only "external program" leveraged, because there are not many both free and mature Microsoft Office libraries (except in Java)
- *Online service availability*: Not everybody can (or wants to) install a container engine on their machine
  - Users might not have all the administrative rights to do so
  - Users might not be technical, especially if there are Docker or Podman related issues
  - Users machines might be limited in resources (not much RAM or CPU power)
- *Docker alternative support on MacOS*: [[https://github.com/lima-vm/lima][Lima]] instead of Docker is possible but hasn't been tested in a while
  
*** The ugly
- *Likely easier to hack than the original dangerzone*: 1 step conversion process, instead of 2 steps
- *This is mostly an experiment* not heavily tested, even if I use =dangerzone-rust= daily
- *Batch conversions* should have been included from day one, instead of having it scheduled for later
- *Not the best code*: I barely /know/ Rust
- *No support for translations yet*: I have done a minimal POC for the approach
- *Probably several "obvious things"*
    
* What is available?

** Architecture overview

Below is a high-level architecture overview.

[[./images/image.png]]

** Components description

|--------------------------------------------+---------------------------------|
| Purpose                                    | Component                       |
|--------------------------------------------+---------------------------------|
| Document processing                        | [[./dangerzone-container][dangerzone-container]] component  |
| Command-line and graphical user interfaces | [[./dangerzone-client][dangerzone-client]] component     |
| Online service feature                     | [[./dangerzone-httpserver][dangerzone-httpserver]] component |
| Command-line client for the online service | [[./dangerzone-httpclient][dangerzone-httpclient]] component |
|--------------------------------------------+---------------------------------|  

* What is required?

- *Operating System*: Linux and MacOS haven been tested
  - Windows and BSD support will be tested soon enough
  - Under BSD, the UI is likely not available due to technical challenges (FTLK UI compilation)
- *Container Runtime*: [[https://podman.io/][Podman]], [[https://www.docker.com/][Docker]] or [[https://github.com/lima-vm/lima][Lima]]
  - For MacOS, /please/ use either Docker or Lima, as Podman on MacOS has [[https://github.com/containers/podman/issues/8016][annoyances]] for volumes
  - The program doesn't auto-configure remote mounts (i.e. [[https://docs.podman.io/en/latest/markdown/podman-machine.1.html][Podman machine]] or [[https://multipass.run/docs][Multipass]])

* Why this?

- *Personal learning*: [[https://www.rust-lang.org/][Rust]] is reasonably high-level and is not garbage collected
- *Self-Contained tooling with no scripting*
- *Workflow automation exploration*: Browser plugin, VM orchestration, Web Service, etc.
- *Optimization opportunities*: Reduced container image size with very low computer resources requirements

* What is planned?

- [X] Replicate CLI functions of the original tool, not necessarily the exact behavior ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral01][spiral01 branch]])
- [X] "Misc." bulk fixes & changes ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral02][spiral02 branch]])
  - [X] Eliminate CLI calls inside the container, most of the job can likely be done with libraries
  - [X] Minimal Desktop user interface via the [[https://github.com/fltk-rs/fltk-rs][FLTK]] lightweight toolkit
  - [X] Temporarily drop support for Office documents (OpenDocument, MS Office), more research for [[https://github.com/rimerosolutions/rust-calls-java][Java native libraries integration]] (few runtime errors with [[https://www.oracle.com/java/graalvm/][GraalVM]])
- [X] UI and other improvements, including tech debt and other issues ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral03][spiral03 branch]])
- [X] Bring back Office document support via LibreOffice ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral04][spiral04 branch]])
  - [X] Add workarounds for mime-type detection library (OpenDocument, OOXML, Legacy office format)
  - [X] Update processing logic to use libreoffice for initial PDF conversion, prior further processing
- [X] Documentation updates and compilation error fix ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral05][spiral05 branch]])
- [X] Usability improvements and slightly better MS Windows support ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral06][spiral06 branch]])
- [X] Online service with Web interface and remote CLI client ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral07][spiral07 branch]])  
- [X] Look at releases for Linux, MacOS and Windows ([[https://github.com/rimerosolutions/dangerzone-rust/tree/spiral08][spiral08 branch]])
- [ ] Implement conversion progress information
- [ ] Support batch conversions
- [ ] Support application preferences (GUI and CLI support)
- [ ] Revisit remote mounts options for [[https://github.com/canonical/multipass][Multipass]] and [[https://github.com/containers/podman][Podman]]
- [ ] Look at automation scenarios and use-cases (Browser plugin, HTTP Proxy, etc.)
- [ ] etc.
  
    

  
