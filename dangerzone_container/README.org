#+TITLE: dangerzone-container README

* What is this?

This is the =backend/server= part of the solution running inside a container "solution" ([[https://www.docker.com/][Docker]] or [[https://podman.io/][Podman]] or [[https://github.com/lima-vm/lima][Lima]]).

There's a small series of transformations leading to the generation of a trusted PDF document (optionally a searchable PDF instead of only images, that is if [[https://en.wikipedia.org/wiki/Optical_character_recognition][OCR]] was requested).
- Most of the conversion steps happen in memory, except for printing office documents to PDF (early stages of the conversion).
- OCR is a resources intensive and time consuming: it should always be disabled, unless you NEED to be able to search or select text in the PDF.

[[./images/architecture.png]]

* What is required?

You only need a container engine such as /Docker/ or /Podman/ or /Lima/. Please note that this has mostly been tested under Linux with Podman so far.

* How to build this?

Please note that the container image of this project is published on [[https://hub.docker.com/r/uycyjnzgntrn/dangerzone-converter][Docker Hub]].

At the root of this project, accordingly your container engine, please invoke one of the commands below.

** Podman

Because of a shared library, you must build the container image from the =dangerzone-rust= root folder.

#+begin_src sh
  podman build -t localhost/dangerzone-converter . -f dangerzone_container/Dockerfile
#+end_src

** Docker

#+begin_src sh
  docker build -t localhost/dangerzone-converter . -f dangerzone_container/Dockerfile
#+end_src

** Lima

#+begin_src sh
  lima nerdctl build -t localhost/dangerzone-converter . -f dangerzone_container/Dockerfile
#+end_src

For "manual testing" purposes, the following dependencies are required under =Void Linux=:
- =leptonica-devel=
- =libclang=
- =clang=
- =tesseract-ocr-devel=
- =poppler-glib-devel=

* How to publish to Docker Hub?

The command examples below apply to =podman=, the syntax is similar for =docker= or =lima=.

For all the command below it is assumed that you're at the root of the =dangerzone_container= folder.

#+begin_src sh
  APPVERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/[\"]/, "", $2); printf("%s",$2) }' Cargo.toml)

  podman login -u uycyjnzgntrn docker.io

  podman tag localhost/dangerzone-converter:latest docker.io/uycyjnzgntrn/dangerzone-converter:${APPVERSION}
  podman push docker.io/uycyjnzgntrn/dangerzone-converter:${APPVERSION}

  podman tag docker.io/uycyjnzgntrn/dangerzone-converter:${APPVERSION} docker.io/uycyjnzgntrn/dangerzone-converter:latest
  podman push docker.io/uycyjnzgntrn/dangerzone-converter:latest

  podman logout docker.io
#+end_src


* How to run this?

This application is leveraged by the =dangerzone-client= program (shell commands to =podman= or =docker= or =lima=) , it's not really meant to be used "directly" except for dev/testing purposes.
